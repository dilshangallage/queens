{"version":3,"sources":["../../src/pages/invoicesettle/invoicesettle.module.ts","../../src/pages/invoicesettle/invoicesettle.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAyC;AACO;AACI;AAUpD;IAAA;IAAsC,CAAC;IAA1B,uBAAuB;QARnC,uEAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,yEAAiB;aAClB;YACD,OAAO,EAAE;gBACP,sEAAe,CAAC,QAAQ,CAAC,yEAAiB,CAAC;aAC5C;SACF,CAAC;OACW,uBAAuB,CAAG;IAAD,8BAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;;;;;ACZM;AACgC;AACP;AAEnE;;;;;GAKG;AAOH;IAOE,2BAAmB,OAAsB,EAAS,SAAoB,EAAU,QAA0B,EAAU,KAAsB;QAAvH,YAAO,GAAP,OAAO,CAAe;QAAS,cAAS,GAAT,SAAS,CAAW;QAAU,aAAQ,GAAR,QAAQ,CAAkB;QAAU,UAAK,GAAL,KAAK,CAAiB;QACxI,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QAC5C,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACxC,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;IAE3B,CAAC;IAED,0CAAc,GAAd;QACE,OAAO,CAAC,GAAG,CAAC,kCAAkC,CAAC,CAAC;IAClD,CAAC;IAED,2BAA2B;IAC3B,8CAAkB,GAAlB,UAAmB,OAAe;QAAlC,iBAeC;QAdC,IAAI,CAAC,QAAQ,CAAC,oBAAoB,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,aAAG;YAClD,IAAI,GAAG,CAAC,SAAS,CAAC,EAAE;gBAClB,KAAI,CAAC,IAAI,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC;gBACxB,IAAI,KAAI,CAAC,IAAI,EAAE;oBACb,IAAI,KAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,IAAI,IAAI,KAAI,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE;wBAC5D,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC;qBACzB;iBACF;aACF;iBAAM;gBACL,KAAI,CAAC,kBAAkB,EAAE,CAAC;aAC3B;QACH,CAAC,EAAE,aAAG;YACJ,KAAI,CAAC,kBAAkB,EAAE,CAAC;QAC5B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,qBAAqB;IACrB,0CAAc,GAAd,UAAe,EAAU;QACvB,IAAI,CAAC,kBAAkB,CAAC,EAAE,CAAC,CAAC;IAC9B,CAAC;IAED,mDAAmD;IACnD,yCAAa,GAAb,UAAc,IAAS;QACrB,IAAI,CAAC,aAAa,CAAC,GAAG,IAAI,CAAC;QAC3B,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC;QAC5B,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,EAAE,EAAC,MAAM,EAAE,IAAI,EAAC,CAAC,CAAC;IACnD,CAAC;IAED,oBAAoB;IACpB,8CAAkB,GAAlB;QACE,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;YAC1B,KAAK,EAAE,SAAS;YAChB,QAAQ,EAAE,2BAA2B;SACtC,CAAC,CAAC;QACH,GAAG,CAAC,OAAO,EAAE,CAAC;IAChB,CAAC;IAvDU,iBAAiB;QAJ7B,wEAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;WACG;SAClC,CAAC;0BAQ0I;OAP/H,iBAAiB,CAyD7B;IAAD,CAAC;AAAA;SAzDY,iBAAiB,e","file":"3.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { InvoicesettlePage } from './invoicesettle';\n\n@NgModule({\n  declarations: [\n    InvoicesettlePage,\n  ],\n  imports: [\n    IonicPageModule.forChild(InvoicesettlePage),\n  ],\n})\nexport class InvoicesettlePageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/invoicesettle/invoicesettle.module.ts","import { Component } from '@angular/core';\nimport {IonicPage, NavController, NavParams, AlertController} from 'ionic-angular';\nimport {RestcallProvider} from '../../providers/restcall/restcall';\n\n/**\n * Generated class for the InvoicesettlePage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@IonicPage()\n@Component({\n  selector: 'page-invoicesettle',\n  templateUrl: 'invoicesettle.html',\n})\nexport class InvoicesettlePage {\n\n  public invoiceId: number;\n  public data: any;\n  public amount: string;\n  public advanceView: boolean;\n\n  constructor(public navCtrl: NavController, public navParams: NavParams, private restCall: RestcallProvider, private alert: AlertController) {\n    this.invoiceId = this.navParams.get('conf');\n    this.loadCustomerDetils(this.invoiceId);\n    this.advanceView = false;\n\n  }\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad InvoicesettlePage');\n  }\n\n  // load customer details //\n  loadCustomerDetils(invoice: number) {\n    this.restCall.searchInvoiceHistory(invoice).then(res => {\n      if (res['success']) {\n        this.data = res['data'];\n        if (this.data) {\n          if (this.data['type'] === 'BD' && this.data['balance'] !== 0) {\n            this.advanceView = true;\n          }\n        }\n      } else {\n        this.alertEmptyCustomer();\n      }\n    }, err =>{\n      this.alertEmptyCustomer();\n    });\n  }\n\n  // search suctomer //\n  searchCustomer(id: number) {\n    this.loadCustomerDetils(id);\n  }\n\n  // settle the payment in advance payment receipt //\n  settlePayment(data: any) {\n    data['invoiceType'] = 'BD';\n    data['id'] = this.invoiceId;\n    this.navCtrl.push('InvoicePage', {'data': data});\n  }\n\n  // show error msg //\n  alertEmptyCustomer() {\n    let alt = this.alert.create({\n      title: 'Failed!',\n      subTitle: 'Search customer not valid'\n    });\n    alt.present();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/invoicesettle/invoicesettle.ts"],"sourceRoot":""}